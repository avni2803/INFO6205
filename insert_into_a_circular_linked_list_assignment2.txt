/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _next) {
        val = _val;
        next = _next;
    }
};
*/

class Solution {
  public Node insert(Node head, int newValue) {
    if (head == null) {
      Node newNode = new Node(newValue, null);
      newNode.next = newNode;
      return newNode;
    }

    Node prev = head;
    Node current = head.next;
    boolean toInsert = false;

    do {
      if (prev.val <= newValue && newValue <= current.val) {
       
        toInsert = true;
      } else if (prev.val > current.val) {
        
        if (newValue >= prev.val || newValue <= current.val)
          toInsert = true;
      }

      if (toInsert) {
        prev.next = new Node(newValue, current);
        return head;
      }

      prev = current;
      current = current.next;
    } while (prev != head);

   
    prev.next = new Node(newValue, current);
    return head;
  }
}