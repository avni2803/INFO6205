/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode root, int n1) {
        ListNode current = root;
        int n= 0;
        while (current != null) {
            current = current.next;
            n++;
        }

        int width = n / n1, rem = n % n1;

        ListNode[] l1 = new ListNode[n1];
        current = root;
        for (int i = 0; i < n1; ++i) {
            ListNode head = new ListNode(0), write = head;
            for (int j = 0; j < width + (i < rem ? 1 : 0); ++j) {
                write = write.next = new ListNode(current.val);
                if (current != null) current = current.next;
            }
            l1[i] = head.next;
        }
        return l1;
    }
}